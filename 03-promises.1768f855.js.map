{"mappings":"AACA,MAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,oBAqBjC,SAASI,EAAcC,EAAUJ,GAC/B,OAAO,IAAIK,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAACF,E,MAAUJ,IAEnBO,EAAO,C,SAACH,E,MAAUJ,GAAO,GAE1BA,EAAM,G,CA3BbJ,EAAKC,KAAKe,iBAAiB,UAE3B,SAAkBC,GAChBA,EAAIC,iBACJ,IAAIC,GAAYnB,EAAKI,MAAMgB,MACvBC,GAAWrB,EAAKK,KAAKe,MACrBE,GAAatB,EAAKM,OAAOc,MAC7B,IAAK,IAAIG,EAAW,EAAGA,GAAYD,EAAWC,GAAY,EACxDhB,EAAcgB,EAAUJ,GACrBK,MAAK,EAAChB,SAAEA,EAAQJ,MAAEA,MACjBqB,QAAQC,IAAI,uBAAqBlB,QAAiBJ,MAAU,IAE7DuB,OAAM,EAACnB,SAAEA,EAAQJ,MAAEA,MAClBqB,QAAQC,IAAI,sBAAoBlB,QAAeJ,MAAU,IAE3De,GAAYE,C","sources":["src/js/03-promises.js"],"sourcesContent":["\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n};\n// console.log(refs.delay);\nrefs.form.addEventListener('submit', onSubmit);\n\nfunction onSubmit(evt) {\n  evt.preventDefault();\n  let delayAdd = +refs.delay.value;\n  let stepAdd = +refs.step.value;\n  let amountAdd = +refs.amount.value;\n  for (let position = 1; position <= amountAdd; position += 1) {\n    createPromise(position, delayAdd)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      })\n      delayAdd += stepAdd;\n}\n};\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position, delay})\n      } else {\n        reject({position, delay})\n      }\n    }, delay);\n  }); \n  \n}\n"],"names":["$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","$47d4ff9957288465$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","delayAdd","value","stepAdd","amountAdd","position1","then","console","log","catch"],"version":3,"file":"03-promises.1768f855.js.map"}